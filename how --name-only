[33mcommit b62b69a4cd5b082c55e7a2a3fdd2c15a33f74fc7[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m)[m
Author: user3228 <st048497@student.spbu.ru>
Date:   Sun Feb 17 14:51:38 2019 +0300

    initial commit

[1mdiff --git a/build/.ninja_deps b/build/.ninja_deps[m
[1mnew file mode 100644[m
[1mindex 0000000..41c3a43[m
Binary files /dev/null and b/build/.ninja_deps differ
[1mdiff --git a/build/.ninja_log b/build/.ninja_log[m
[1mnew file mode 100644[m
[1mindex 0000000..47c2f89[m
[1m--- /dev/null[m
[1m+++ b/build/.ninja_log[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32m# ninja log v5[m
[32m+[m[32m2	976	1547118759	src/myproject/src@myproject@@myproject@exe/vector.cpp.o	8d2f38cbc4d044dc[m
[32m+[m[32m978	1231	1547118759	src/myproject/myproject	672974952c3d2796[m
[32m+[m[32m3	600	1547118893	build.ninja	8bbfc6442c5f7b4e[m
[32m+[m[32m3	967	1547118894	src/myproject/src@myproject@@myproject@exe/vector.cpp.o	814ba2a9504cb702[m
[32m+[m[32m968	1271	1547118894	src/myproject/myproject	36aa2640f777b71b[m
[1mdiff --git a/build/build.ninja b/build/build.ninja[m
[1mnew file mode 100644[m
[1mindex 0000000..077948e[m
[1m--- /dev/null[m
[1m+++ b/build/build.ninja[m
[36m@@ -0,0 +1,133 @@[m
[32m+[m[32m# This is the build file for project "myproject"[m
[32m+[m[32m# It is autogenerated by the Meson build system.[m
[32m+[m[32m# Do not edit by hand.[m
[32m+[m
[32m+[m[32mninja_required_version = 1.5.1[m
[32m+[m
[32m+[m[32m# Rules for compiling.[m
[32m+[m
[32m+[m[32mrule cpp_COMPILER[m
[32m+[m[32m command = c++ $ARGS  -MD -MQ $out -MF '$DEPFILE' -o $out -c $in[m
[32m+[m[32m deps = gcc[m
[32m+[m[32m depfile = $DEPFILE[m
[32m+[m[32m description = Compiling C++ object $out.[m
[32m+[m
[32m+[m[32mrule cpp_PCH[m
[32m+[m[32m command = c++ $ARGS  -MD -MQ $out -MF '$DEPFILE' -o $out -c $in[m
[32m+[m[32m deps = gcc[m
[32m+[m[32m depfile = $DEPFILE[m
[32m+[m[32m description = Precompiling header $in.[m
[32m+[m
[32m+[m
[32m+[m[32m# Rules for linking.[m
[32m+[m
[32m+[m[32mrule STATIC_LINKER[m
[32m+[m[32m command =  rm -f $out && gcc-ar $LINK_ARGS $out $in[m
[32m+[m[32m description = Linking static target $out.[m
[32m+[m
[32m+[m[32mrule cpp_LINKER[m
[32m+[m[32m command = c++ $ARGS -o $out $in $LINK_ARGS  $aliasing[m
[32m+[m[32m description = Linking target $out.[m
[32m+[m
[32m+[m
[32m+[m[32mrule SHSYM[m
[32m+[m[32m command = /usr/bin/python3 /usr/bin/meson --internal symbolextractor $in $out $CROSS[m
[32m+[m[32m restat = 1[m
[32m+[m[32m description = Generating symbol file $out.[m
[32m+[m
[32m+[m[32m# Other rules[m
[32m+[m
[32m+[m[32mrule CUSTOM_COMMAND[m
[32m+[m[32m command = $COMMAND[m
[32m+[m[32m description = $DESC[m
[32m+[m[32m restat = 1[m
[32m+[m
[32m+[m[32mrule CUSTOM_COMMAND_DEP[m
[32m+[m[32m command = $COMMAND[m
[32m+[m[32m description = $DESC[m
[32m+[m[32m deps = gcc[m
[32m+[m[32m depfile = $DEPFILE[m
[32m+[m[32m restat = 1[m
[32m+[m
[32m+[m[32mrule REGENERATE_BUILD[m
[32m+[m[32m command = /usr/bin/python3 /usr/bin/meson --internal regenerate /home/st0484971/project /home/st0484971/project/build --backend ninja[m
[32m+[m[32m description = Regenerating build files.[m
[32m+[m[32m generator = 1[m
[32m+[m
[32m+[m
[32m+[m[32m# Phony build target, always out of date[m
[32m+[m[32mbuild PHONY: phony[m
[32m+[m
[32m+[m[32m# Build rules for targets[m
[32m+[m
[32m+[m[32mbuild src/myproject/src@myproject@@myproject@exe/vector.cpp.o: cpp_COMPILER ../src/myproject/vector.cpp[m
[32m+[m[32m DEPFILE = src/myproject/src@myproject@@myproject@exe/vector.cpp.o.d[m
[32m+[m[32m ARGS = -Isrc/myproject/src@myproject@@myproject@exe -Isrc/myproject -I../src/myproject -Isrc -I../src -fdiagnostics-color=always -fsanitize=address -fno-omit-frame-pointer -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wnon-virtual-dtor -std=c++11 -O0 -g[m
[32m+[m
[32m+[m[32mbuild src/myproject/myproject: cpp_LINKER src/myproject/src@myproject@@myproject@exe/vector.cpp.o[m
[32m+[m[32m LINK_ARGS = -fsanitize=address -Wl,--no-undefined -Wl,--as-needed[m
[32m+[m
[32m+[m[32m# Test rules[m
[32m+[m
[32m+[m[32mbuild meson-test: CUSTOM_COMMAND all PHONY[m
[32m+[m[32m COMMAND = /usr/bin/python3 -u /usr/bin/meson test --no-rebuild --print-errorlogs[m
[32m+[m[32m DESC = Running$ all$ tests.[m
[32m+[m[32m pool = console[m
[32m+[m
[32m+[m[32mbuild test: phony meson-test[m
[32m+[m
[32m+[m[32mbuild meson-benchmark: CUSTOM_COMMAND all PHONY[m
[32m+[m[32m COMMAND = /usr/bin/python3 -u /usr/bin/meson test --benchmark --logbase benchmarklog --num-processes=1 --no-rebuild[m
[32m+[m[32m DESC = Running$ benchmark$ suite.[m
[32m+[m[32m pool = console[m
[32m+[m
[32m+[m[32mbuild benchmark: phony meson-benchmark[m
[32m+[m
[32m+[m[32m# Install rules[m
[32m+[m
[32m+[m[32mbuild meson-install: CUSTOM_COMMAND PHONY | all[m
[32m+[m[32m DESC = Installing$ files.[m
[32m+[m[32m COMMAND = /usr/bin/python3 /usr/bin/meson install --no-rebuild[m
[32m+[m[32m pool = console[m
[32m+[m
[32m+[m[32mbuild install: phony meson-install[m
[32m+[m
[32m+[m[32mbuild meson-dist: CUSTOM_COMMAND PHONY[m
[32m+[m[32m DESC = Creating$ source$ packages[m
[32m+[m[32m COMMAND = /usr/bin/python3 /usr/bin/meson --internal dist /home/st0484971/project /home/st0484971/project/build /usr/bin/python3 /usr/bin/meson[m
[32m+[m[32m pool = console[m
[32m+[m
[32m+[m[32mbuild dist: phony meson-dist[m
[32m+[m
[32m+[m[32m# Suffix[m
[32m+[m
[32m+[m[32mbuild meson-scan-build: CUSTOM_COMMAND PHONY[m
[32m+[m[32m COMMAND = /usr/bin/python3 /usr/bin/meson --internal scanbuild /home/st0484971/project /home/st0484971/project/build /usr/bin/python3 /usr/bin/meson[m
[32m+[m[32m pool = console[m
[32m+[m
[32m+[m[32mbuild scan-build: phony meson-scan-build[m
[32m+[m
[32m+[m[32mbuild meson-uninstall: CUSTOM_COMMAND PHONY[m
[32m+[m[32m COMMAND = /usr/bin/python3 /usr/bin/meson --internal uninstall[m
[32m+[m[32m pool = console[m
[32m+[m
[32m+[m[32mbuild uninstall: phony meson-uninstall[m
[32m+[m
[32m+[m[32mbuild all: phony src/myproject/myproject[m
[32m+[m
[32m+[m[32mdefault all[m
[32m+[m
[32m+[m[32mbuild clean: phony meson-clean[m
[32m+[m
[32m+[m[32mbuild meson-clean: CUSTOM_COMMAND PHONY[m
[32m+[m[32m COMMAND = ninja -t clean[m
[32m+[m[32m description = Cleaning.[m
[32m+[m
[32m+[m[32mbuild build.ninja: REGENERATE_BUILD ../meson.build ../src/meson.build ../src/myproject/meson.build meson-private/coredata.dat[m
[32m+[m[32m pool = console[m
[32m+[m
[32m+[m[32mbuild reconfigure: REGENERATE_BUILD PHONY[m
[32m+[m[32m pool = console[m
[32m+[m
[32m+[m[32mbuild ../meson.build ../src/meson.build ../src/myproject/meson.build meson-private/coredata.dat: phony[m[41m [m
[32m+[m
[1mdiff --git a/build/compile_commands.json b/build/compile_commands.json[m
[1mnew file mode 100644[m
[1mindex 0000000..243b13d[m
[1m--- /dev/null[m
[1m+++ b/build/compile_commands.json[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m[[m
[32m+[m[32m  {[m
[32m+[m[32m    "directory": "/home/st0484971/project/build",[m
[32m+[m[32m    "command": "c++ -Isrc/myproject/src@myproject@@myproject@exe -Isrc/myproject -I../src/myproject -Isrc -I../src -fdiagnostics-color=always -fsanitize=address -fno-omit-frame-pointer -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wnon-virtual-dtor -std=c++11 -O0 -g  -MD -MQ 'src/myproject/src@myproject@@myproject@exe/vector.cpp.o' -MF 'src/myproject/src@myproject@@myproject@exe/vector.cpp.o.d' -o 'src/myproject/src@myproject@@myproject@exe/vector.cpp.o' -c ../src/myproject/vector.cpp",[m
[32m+[m[32m    "file": "../src/myproject/vector.cpp"[m
[32m+[m[32m  }[m
[32m+[m[32m][m
[1mdiff --git a/build/meson-logs/meson-log.txt b/build/meson-logs/meson-log.txt[m
[1mnew file mode 100644[m
[1mindex 0000000..34afb25[m
[1m--- /dev/null[m
[1m+++ b/build/meson-logs/meson-log.txt[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32mBuild started at 2019-01-10T13:57:47.924236[m
[32m+[m[32mMain binary: /usr/bin/python3[m
[32m+[m[32mPython system: Linux[m
[32m+[m[32mThe Meson build system[m
[32m+[m[32mVersion: 0.47.2[m
[32m+[m[32mSource dir: /home/st0484971/project[m
[32m+[m[32mBuild dir: /home/st0484971/project/build[m
[32m+[m[32mBuild type: native build[m
[32m+[m[32mProject name: myproject[m
[32m+[m[32mProject version: 0.1.0[m
[32m+[m[32mNative C++ compiler: c++ (gcc 8.1.1 "c++ (GCC) 8.1.1 20180502 (Red Hat 8.1.1-1)")[m
[32m+[m[32mBuild machine cpu family: x86_64[m
[32m+[m[32mBuild machine cpu: x86_64[m
[32m+[m[32mBuild targets in project: 1[m
[32m+[m[32mFound ninja-1.8.2 at /usr/bin/ninja[m
[32m+[m[32mRunning compile:[m
[32m+[m[32mWorking directory:  /tmp/tmp8yn1gzzq[m
[32m+[m[32mCommand line:  c++ /tmp/tmp8yn1gzzq/testfile.cpp -pipe -D_FILE_OFFSET_BITS=64 -c -o /tmp/tmp8yn1gzzq/output.obj -O0 -fpermissive --print-search-dirs[m[41m [m
[32m+[m
[32m+[m[32mCode:[m
[32m+[m[41m [m
[32m+[m[32mCompiler stdout:[m
[32m+[m[32m install: /usr/lib/gcc/x86_64-redhat-linux/8/[m
[32m+[m[32mprograms: =/usr/libexec/gcc/x86_64-redhat-linux/8/:/usr/libexec/gcc/x86_64-redhat-linux/8/:/usr/libexec/gcc/x86_64-redhat-linux/:/usr/lib/gcc/x86_64-redhat-linux/8/:/usr/lib/gcc/x86_64-redhat-linux/:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/bin/x86_64-redhat-linux/8/:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/bin/[m
[32m+[m[32mlibraries: =/usr/lib/gcc/x86_64-redhat-linux/8/:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/lib/x86_64-redhat-linux/8/:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/lib/../lib64/:/usr/lib/gcc/x86_64-redhat-linux/8/../../../x86_64-redhat-linux/8/:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../lib64/:/lib/x86_64-redhat-linux/8/:/lib/../lib64/:/usr/lib/x86_64-redhat-linux/8/:/usr/lib/../lib64/:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../x86_64-redhat-linux/lib/:/usr/lib/gcc/x86_64-redhat-linux/8/../../../:/lib/:/usr/lib/[m
[32m+[m
[32m+[m[32mCompiler stderr:[m
[32m+[m[41m [m
[1mdiff --git a/build/meson-private/build.dat b/build/meson-private/build.dat[m
[1mnew file mode 100644[m
[1mindex 0000000..2c2d881[m
Binary files /dev/null and b/build/meson-private/build.dat differ
[1mdiff --git a/build/meson-private/coredata.dat b/build/meson-private/coredata.dat[m
[1mnew file mode 100644[m
[1mindex 0000000..f8d32d2[m
Binary files /dev/null and b/build/meson-private/coredata.dat differ
[1mdiff --git a/build/meson-private/coredata.dat.prev b/build/meson-private/coredata.dat.prev[m
[1mnew file mode 100644[m
[1mindex 0000000..fb7b0d4[m
Binary files /dev/null and b/build/meson-private/coredata.dat.prev differ
[1mdiff --git a/build/meson-private/install.dat b/build/meson-private/install.dat[m
[1mnew file mode 100644[m
[1mindex 0000000..38085ad[m
Binary files /dev/null and b/build/meson-private/install.dat differ
[1mdiff --git a/build/meson-private/meson.lock b/build/meson-private/meson.lock[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/build/meson-private/meson_benchmark_setup.dat b/build/meson-private/meson_benchmark_setup.dat[m
[1mnew file mode 100644[m
[1mindex 0000000..482c0e3[m
Binary files /dev/null and b/build/meson-private/meson_benchmark_setup.dat differ
[1mdiff --git a/build/meson-private/meson_test_setup.dat b/build/meson-private/meson_test_setup.dat[m
[1mnew file mode 100644[m
[1mindex 0000000..482c0e3[m
Binary files /dev/null and b/build/meson-private/meson_test_setup.dat differ
[1mdiff --git a/build/meson-private/sanitycheckcpp.cc b/build/meson-private/sanitycheckcpp.cc[m
[1mnew file mode 100644[m
[1mindex 0000000..632cf43[m
[1m--- /dev/null[m
[1m+++ b/build/meson-private/sanitycheckcpp.cc[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mclass breakCCompiler;int main(int argc, char **argv) { return 0; }[m
[1mdiff --git a/build/meson-private/sanitycheckcpp.exe b/build/meson-private/sanitycheckcpp.exe[m
[1mnew file mode 100755[m
[1mindex 0000000..cd9a56b[m
Binary files /dev/null and b/build/meson-private/sanitycheckcpp.exe differ
[1mdiff --git a/build/src/myproject/myproject b/build/src/myproject/myproject[m
[1mnew file mode 100755[m
[1mindex 0000000..02e2012[m
Binary files /dev/null and b/build/src/myproject/myproject differ
[1mdiff --git a/build/src/myproject/src@myproject@@myproject@exe/vector.cpp.o b/build/src/myproject/src@myproject@@myproject@exe/vector.cpp.o[m
[1mnew file mode 100644[m
[1mindex 0000000..48a4581[m
Binary files /dev/null and b/build/src/myproject/src@myproject@@myproject@exe/vector.cpp.o differ
[1mdiff --git a/meson.build b/meson.build[m
[1mnew file mode 100644[m
[1mindex 0000000..ee419e6[m
[1m--- /dev/null[m
[1m+++ b/meson.build[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32mproject([m
[32m+[m[32m'myproject',[m[41m [m
[32m+[m[32m'cpp',[m
[32m+[m[32mversion: '0.1.0',[m[41m [m
[32m+[m[32mmeson_version: '>=0.46',[m[41m [m
[32m+[m[32mdefault_options: ['cpp_std=c++11'][m[41m [m
[32m+[m[32m)[m
[32m+[m[32msubdir('src')[m
[1mdiff --git a/src/meson.build b/src/meson.build[m
[1mnew file mode 100644[m
[1mindex 0000000..d5ce344[m
[1m--- /dev/null[m
[1m+++ b/src/meson.build[m
[36m@@ -0,0 +1,4 @@[m
[32m+[m[32msrcdir = include_directories('.')[m
[32m+[m
[32m+[m[32msubdir('myproject')[m
[32m+[m
[1mdiff --git a/src/myproject/build/meson-logs/meson-log.txt b/src/myproject/build/meson-logs/meson-log.txt[m
[1mnew file mode 100644[m
[1mindex 0000000..3b4c766[m
[1m--- /dev/null[m
[1m+++ b/src/myproject/build/meson-logs/meson-log.txt[m
[36m@@ -0,0 +1,10 @@[m
[32m+[m[32mBuild started at 2019-01-10T13:37:40.618153[m
[32m+[m[32mMain binary: /usr/bin/python3[m
[32m+[m[32mPython system: Linux[m
[32m+[m[32mThe Meson build system[m
[32m+[m[32mVersion: 0.47.2[m
[32m+[m[32mSource dir: /home/st0484971/project/src/myproject[m
[32m+[m[32mBuild dir: /home/st0484971/project/src/myproject/build[m
[32m+[m[32mBuild type: native build[m
[32m+[m
[32m+[m[32mERROR: First statement must be a call to project[m
[1mdiff --git a/src/myproject/build/meson-private/meson.lock b/src/myproject/build/meson-private/meson.lock[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/src/myproject/meson.build b/src/myproject/meson.build[m
[1mnew file mode 100644[m
[1mindex 0000000..7ebb140[m
[1m--- /dev/null[m
[1m+++ b/src/myproject/meson.build[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32mmyproject_src = files([[m
[32m+[m[32m'vector.cpp'[m[41m [m
[32m+[m[32m])[m
[32m+[m[32mexecutable([m
[32m+[m[32m'myproject',[m[41m [m
[32m+[m[32minclude_directories: srcdir,[m[41m [m
[32m+[m[32msources: myproject_src,[m[41m [m
[32m+[m[32minstall: true[m[41m [m
[32m+[m[32m)[m
[1mdiff --git a/src/myproject/vector.cpp b/src/myproject/vector.cpp[m
[1mnew file mode 100644[m
[1mindex 0000000..d9d8859[m
[1m--- /dev/null[m
[1m+++ b/src/myproject/vector.cpp[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m#include <iostream>[m
[32m+[m[32m#include <utility>[m
[32m+[m[32m#include <random>[m
[32m+[m[32m#include <algorithm>[m
[32m+[m[32m#include <fstream>[m
[32m+[m[32m#include <string>[m
[32m+[m[32m#include <myproject/vector.h>[m
[32m+[m
[32m+[m[32mint main() {[m
[32m+[m[41m [m
[32m+[m[32m    Vector<ofstream> v(0);[m
[32m+[m[41m [m
[32m+[m[32m    // ofstream ("a", ios::out);[m
[32m+[m[32m    //ofstream b_file("b", ios::out);[m
[32m+[m[32m    //ofstream c_file("c", ios::out);[m
[32m+[m[41m [m
[32m+[m[32m    v.push_back(ofstream("a", ios::out));[m
[32m+[m[32m    v.push_back(ofstream("b", ios::out));[m
[32m+[m[32m    v.push_back(ofstream("c", ios::out));[m
[32m+[m[32m    //v.push_back(&b_file);[m
[32m+[m[32m    //v.push_back(&c_file);[m
[32m+[m[41m [m
[32m+[m[41m [m
[32m+[m[32m    // ostrm.write(to_string(i)); // binary output[m
[32m+[m[32m    //ostrm << 123 << "abc" << '\n';[m
[32m+[m[41m [m
[32m+[m[32m    random_device rd;[m
[32m+[m[32m    mt19937 g(rd());[m
[32m+[m[41m [m
[32m+[m[32m    shuffle(v.begin(), v.end(), g);[m
[32m+[m[41m [m
[32m+[m[32m    for (auto i = 0; i < v.size(); ++i) {[m
[32m+[m[32m        v[i] << i;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/src/myproject/vector.h b/src/myproject/vector.h[m
[1mnew file mode 100644[m
[1mindex 0000000..3509164[m
[1m--- /dev/null[m
[1m+++ b/src/myproject/vector.h[m
[36m@@ -0,0 +1,139 @@[m
[32m+[m[32m#include <iostream>[m
[32m+[m[32m#include <utility>[m
[32m+[m[32m#include <random>[m
[32m+[m[32m#include <algorithm>[m
[32m+[m[32m#include <fstream>[m
[32m+[m[32m#include <string>[m
[32m+[m[41m [m
[32m+[m[32musing namespace std;[m
[32m+[m[41m [m
[32m+[m[32mtemplate<class T> class Vector {[m
[32m+[m[32m    private:[m
[32m+[m[41m [m
[32m+[m[32m        T* elem;[m
[32m+[m[32m        int sz;[m
[32m+[m[41m [m
[32m+[m[32m    public:[m
[32m+[m[41m [m
[32m+[m[32m        Vector(int s): elem{new T[s]}, sz{s} {}[m
[32m+[m[41m [m
[32m+[m[32m        // copy-constructor[m
[32m+[m[32m        Vector(Vector& source): elem{new T[source.size()]}, sz{source.size()} {[m
[32m+[m[32m            // cout << "copy constructor called" << '\n';[m
[32m+[m[41m [m
[32m+[m[32m            copy(source.begin(), source.end(), elem);[m
[32m+[m[32m        }[m
[32m+[m[41m [m
[32m+[m[32m        // move-constructor[m
[32m+[m[32m        Vector(Vector&& source) {[m
[32m+[m[32m            // cout << "move constructor called" << '\n';[m
[32m+[m[41m [m
[32m+[m[32m            sz = source.size();[m
[32m+[m[41m [m
[32m+[m[32m            elem = new T[sz];[m
[32m+[m[41m [m
[32m+[m[32m            move(source.begin(), source.end(), elem);[m
[32m+[m[41m [m
[32m+[m[32m        }[m
[32m+[m[41m [m
[32m+[m[32m        ~Vector() {[m
[32m+[m[32m            delete[] elem;[m
[32m+[m[32m        }[m
[32m+[m[41m [m
[32m+[m[41m [m
[32m+[m[32m        Vector& operator=(Vector& source) {[m
[32m+[m[32m            // cout << "copy assignement called" << '\n';[m
[32m+[m[32m            sz = source.size();[m
[32m+[m[41m [m
[32m+[m[32m            elem = new T[sz];[m
[32m+[m[41m [m
[32m+[m[32m            copy(source.begin(), source.end(), elem);[m
[32m+[m[41m [m
[32m+[m[32m            return *this;[m
[32m+[m[32m        }[m
[32m+[m[41m [m
[32m+[m[32m        // move-assignement[m
[32m+[m[32m        Vector& operator=(Vector&& source) {[m
[32m+[m[32m            // cout << "move assignement called" << '\n';[m
[32m+[m[32m            sz = source.size();[m
[32m+[m[41m [m
[32m+[m[32m            elem = new T[sz];[m
[32m+[m[41m [m
[32m+[m[32m            move(source.begin(), source.end(), elem);[m
[32m+[m[41m [m
[32m+[m[32m            return *this;[m
[32m+[m[32m        }[m[41m      [m
[32m+[m[41m [m
[32m+[m[41m [m
[32m+[m[32m        T* begin() { return &elem[0]; }[m
[32m+[m[41m [m
[32m+[m[32m        T* end() { return &elem[sz]; }[m
[32m+[m[41m [m
[32m+[m[32m        int size() { return sz; }[m
[32m+[m[41m [m
[32m+[m[32m        T& operator[](int i) { return elem[i]; }[m
[32m+[m[41m [m
[32m+[m[32m        void push_back(const T& value) {[m
[32m+[m[32m            // cout << "copy push_back called" << '\n';[m
[32m+[m[41m           [m
[32m+[m[41m [m
[32m+[m[32m            T* new_elem = new T[sz+1];[m
[32m+[m[32m            move(elem, elem+sz, new_elem);[m
[32m+[m[41m [m
[32m+[m[41m [m
[32m+[m[32m            new_elem[sz] = value;[m
[32m+[m[32m            ++sz;[m
[32m+[m[32m            delete[] elem;[m
[32m+[m[41m [m
[32m+[m[41m [m
[32m+[m[32m            elem = new_elem;[m
[32m+[m[32m        }[m
[32m+[m[41m [m
[32m+[m[32m        void push_back(T&& value) {[m
[32m+[m[32m            // cout << "move push_back called" << '\n';[m
[32m+[m[41m [m
[32m+[m[41m [m
[32m+[m[32m            T* new_elem = new T[sz+1];[m
[32m+[m[32m            move(elem, elem+sz, new_elem);[m
[32m+[m[41m [m
[32m+[m[32m            new_elem[sz] = move(value);[m
[32m+[m[32m            ++sz;[m
[32m+[m[41m [m
[32m+[m[32m            delete[] elem;[m
[32m+[m[41m [m
[32m+[m[32m            elem = new_elem;[m
[32m+[m[32m        }[m
[32m+[m[41m [m
[32m+[m[32m        void pop_back() {[m
[32m+[m[32m            --sz;[m
[32m+[m[32m            T* new_elem = new T[sz];[m
[32m+[m[41m [m
[32m+[m[32m            move(elem, elem+sz, new_elem);[m
[32m+[m[32m            delete[] elem;[m
[32m+[m[32m            elem = new_elem;[m
[32m+[m[32m        }[m
[32m+[m[41m [m
[32m+[m[32m        void swap(Vector& other) {[m
[32m+[m[32m            T* new_elem = new T[other.sz];[m
[32m+[m[32m            for (auto i=other.size()-1; i>=0; --i) {[m
[32m+[m[32m                new_elem[i] = other[i];[m
[32m+[m[32m                other.pop_back();[m
[32m+[m[32m            }[m
[32m+[m[41m [m
[32m+[m[32m            for (auto i=0; i<sz; ++i) {[m
[32m+[m[32m                other.push_back(elem[i]);[m
[32m+[m[32m            }[m
[32m+[m[41m [m
[32m+[m[32m            delete[] elem;[m
[32m+[m[32m            elem = new_elem;[m
[32m+[m[32m        }[m
[32m+[m[32m};[m
[32m+[m[41m [m
[32m+[m[41m [m
[32m+[m[32mtemplate<class T> void swap(Vector<T>& one, Vector<T>& another) {[m
[32m+[m[32m    one.swap(another);[m
[32m+[m[32m}[m
[32m+[m[41m [m
[32m+[m[32mVector<int> f(Vector<int> v) {[m
[32m+[m[32m    return v;[m
[32m+[m[32m}[m
[1mdiff --git a/src/myproject/vector/build/meson-logs/meson-log.txt b/src/myproject/vector/build/meson-logs/meson-log.txt[m
[1mnew file mode 100644[m
[1mindex 0000000..147029f[m
[1m--- /dev/null[m
[1m+++ b/src/myproject/vector/build/meson-logs/meson-log.txt[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32mBuild started at 2019-01-10T13:04:18.205704[m
[32m+[m[32mMain binary: /usr/bin/python3[m
[32m+[m[32mPython system: Linux[m
[32m+[m[32mThe Meson build system[m
[32m+[m[32mVersion: 0.47.2[m
[32m+[m[32mSource dir: /home/st0484971/project/src/myproject/vector[m
[32m+[m[32mBuild dir: /home/st0484971/project/src/myproject/vector/build[m
[32m+[m[32mBuild type: native build[m
[32m+[m
[32m+[m[32mmeson.build:9:0: ERROR:  Expecting rparen got id.[m
[32m+[m[32msources:vectorproject_src[m
[32m+[m[32m^[m
[32m+[m[32mFor a block that started at 6,10[m
[32m+[m[32mexecutable([m
[32m+[m[32m          ^[m
[1mdiff --git a/src/myproject/vector/build/meson-private/meson.lock b/src/myproject/vector/build/meson-private/meson.lock[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/src/myproject/vector/meson.build b/src/myproject/vector/meson.build[m
[1mnew file mode 100644[m
[1mindex 0000000..30b0d9d[m
[1m--- /dev/null[m
[1m+++ b/src/myproject/vector/meson.build[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mvectorproject_src = files([[m
[32m+[m	[32m'vector.cpp'])[m
[32m+[m[32minstall_headers([m
[32m+[m[32m'vector'[m
[32m+[m[32m)[m
[32m+[m[32mexecutable([m
[32m+[m[32m'vector',[m
[32m+[m[32minclude_directories: src[m
[32m+[m[32msources:vectorproject_src[m
[32m+[m[32minstall:true[m
[32m+[m[32m)[m
[1mdiff --git a/src/myproject/vector/vector.cpp b/src/myproject/vector/vector.cpp[m
[1mnew file mode 100644[m
[1mindex 0000000..29adfdc[m
[1m--- /dev/null[m
[1m+++ b/src/myproject/vector/vector.cpp[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m#include <src/myproject/vector/vector.h>[m
[32m+[m[32m#include <iostream>[m
[32m+[m[32m#include <utility>[m
[32m+[m[32m#include <random>[m
[32m+[m[32m#include <algorithm>[m
[32m+[m[32m#include <fstream>[m
[32m+[m[32m#include <string>[m
[32m+[m
[32m+[m[32mint main() {[m
[32m+[m[41m [m
[32m+[m[32m    Vector<ofstream> v(0);[m
[32m+[m[41m [m
[32m+[m[32m    // ofstream ("a", ios::out);[m
[32m+[m[32m    //ofstream b_file("b", ios::out);[m
[32m+[m[32m    //ofstream c_file("c", ios::out);[m
[32m+[m[41m [m
[32m+[m[32m    v.push_back(ofstream("a", ios::out));[m
[32m+[m[32m    v.push_back(ofstream("b", ios::out));[m
[32m+[m[32m    v.push_back(ofstream("c", ios::out));[m
[32m+[m[32m    //v.push_back(&b_file);[m
[32m+[m[32m    //v.push_back(&c_file);[m
[32m+[m[41m [m
[32m+[m[41m [m
[32m+[m[32m    // ostrm.write(to_string(i)); // binary output[m
[32m+[m[32m    //ostrm << 123 << "abc" << '\n';[m
[32m+[m[41m [m
[32m+[m[32m    random_device rd;[m
[32m+[m[32m    mt19937 g(rd());[m
[32m+[m[41m [m
[32m+[m[32m    shuffle(v.begin(), v.end(), g);[m
[32m+[m[41m [m
[32m+[m[32m    for (auto i = 0; i < v.size(); ++i) {[m
[32m+[m[32m        v[i] << i;[m
[32m+[m[32m    }[m
[32m+[m
[1mdiff --git a/src/myproject/vector/vector.cpp.save b/src/myproject/vector/vector.cpp.save[m
[1mnew file mode 100644[m
[1mindex 0000000..604782e[m
[1m--- /dev/null[m
[1m+++ b/src/myproject/vector/vector.cpp.save[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m#include <iostream>[m
[1mdiff --git a/src/myproject/vector/vector.cpp.save.1 b/src/myproject/vector/vector.cpp.save.1[m
[1mnew file mode 100644[m
[1mindex 0000000..604782e[m
[1m--- /dev/null[m
[1m+++ b/src/myproject/vector/vector.cpp.save.1[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m#include <iostream>[m
[1mdiff --git a/src/myproject/vector/vector.h b/src/myproject/vector/vector.h[m
[1mnew file mode 100644[m
[1mindex 0000000..3509164[m
[1m--- /dev/null[m
[1m+++ b/src/myproject/vector/vector.h[m
[36m@@ -0,0 +1,139 @@[m
[32m+[m[32m#include <iostream>[m
[32m+[m[32m#include <utility>[m
[32m+[m[32m#include <random>[m
[32m+[m[32m#include <algorithm>[m
[32m+[m[32m#include <fstream>[m
[32m+[m[32m#include <string>[m
[32m+[m[41m [m
[32m+[m[32musing namespace std;[m
[32m+[m[41m [m
[32m+[m[32mtemplate<class T> class Vector {[m
[32m+[m[32m    private:[m
[32m+[m[41m [m
[32m+[m[32m        T* elem;[m
[32m+[m[32m        int sz;[m
[32m+[m[41m [m
[32m+[m[32m    public:[m
[32m+[m[41m [m
[32m+[m[32m        Vector(int s): elem{new T[s]}, sz{s} {}[m
[32m+[m[41m [m
[32m+[m[32m        // copy-constructor[m
[32m+[m[32m        Vector(Vector& source): elem{new T[source.size()]}, sz{source.size()} {[m
[32m+[m[32m            // cout << "copy constructor called" << '\n';[m
[32m+[m[41m [m
[32m+[m[32m            copy(source.begin(), source.end(), elem);[m
[32m+[m[32m        }[m
[32m+[m[41m [m
[32m+[m[32m        // move-constructor[m
[32m+[m[32m        Vector(Vector&& source) {[m
[32m+[m[32m            // cout << "move constructor called" << '\n';[m
[32m+[m[41m [m
[32m+[m[32m            sz = source.size();[m
[32m+[m[41m [m
[32m+[m[32m            elem = new T[sz];[m
[32m+[m[41m [m
[32m+[m[32m            move(source.begin(), source.end(), elem);[m
[32m+[m[41m [m
[32m+[m[32m        }[m
[32m+[m[41m [m
[32m+[m[32m        ~Vector() {[m
[32m+[m[32m            delete[] elem;[m
[32m+[m[32m        }[m
[32m+[m[41m [m
[32m+[m[41m [m
[32m+[m[32m        Vector& operator=(Vector& source) {[m
[32m+[m[32m            // cout << "copy assignement called" << '\n';[m
[32m+[m[32m            sz = source.size();[m
[32m+[m[41m [m
[32m+[m[32m            elem = new T[sz];[m
[32m+[m[41m [m
[32m+[m[32m            copy(source.begin(), source.end(), elem);[m
[32m+[m[41m [m
[32m+[m[32m            return *this;[m
[32m+[m[32m        }[m
[32m+[m[41m [m
[32m+[m[32m        // move-assignement[m
[32m+[m[32m        Vector& operator=(Vector&& source) {[m
[32m+[m[32m            // cout << "move assignement called" << '\n';[m
[32m+[m[32m            sz = source.size();[m
[32m+[m[41m [m
[32m+[m[32m            elem = new T[sz];[m
[32m+[m[41m [m
[32m+[m[32m            move(source.begin(), source.end(), elem);[m
[32m+[m[41m [m
[32m+[m[32m            return *this;[m
[32m+[m[32m        }[m[41m      [m
[32m+[m[41m [m
[32m+[m[41m [m
[32m+[m[32m        T* begin() { return &elem[0]; }[m
[32m+[m[41m [m
[32m+[m[32m        T* end() { return &elem[sz]; }[m
[32m+[m[41m [m
[32m+[m[32m        int size() { return sz; }[m
[32m+[m[41m [m
[32m+[m[32m        T& operator[](int i) { return elem[i]; }[m
[32m+[m[41m [m
[32m+[m[32m        void push_back(const T& value) {[m
[32m+[m[32m            // cout << "copy push_back called" << '\n';[m
[32m+[m[41m           [m
[32m+[m[41m [m
[32m+[m[32m            T* new_elem = new T[sz+1];[m
[32m+[m[32m            move(elem, elem+sz, new_elem);[m
[32m+[m[41m [m
[32m+[m[41m [m
[32m+[m[32m            new_elem[sz] = value;[m
[32m+[m[32m            ++sz;[m
[32m+[m[32m            delete[] elem;[m
[32m+[m[41m [m
[32m+[m[41m [m
[32m+[m[32m            elem = new_elem;[m
[32m+[m[32m        }[m
[32m+[m[41m [m
[32m+[m[32m        void push_back(T&& value) {[m
[32m+[m[32m            // cout << "move push_back called" << '\n';[m
[32m+[m[41m [m
[32m+[m[41m [m
[32m+[m[32m            T* new_elem = new T[sz+1];[m
[32m+[m[32m            move(elem, elem+sz, new_elem);[m
[32m+[m[41m [m
[32m+[m[32m            new_elem[sz] = move(value);[m
[32m+[m[32m            ++sz;[m
[32m+[m[41m [m
[32m+[m[32m            delete[] elem;[m
[32m+[m[41m [m
[32m+[m[32m            elem = new_elem;[m
[32m+[m[32m        }[m
[32m+[m[41m [m
[32m+[m[32m        void pop_back() {[m
[32m+[m[32m            --sz;[m
[32m+[m[32m            T* new_elem = new T[sz];[m
[32m+[m[41m [m
[32m+[m[32m            move(elem, elem+sz, new_elem);[m
[32m+[m[32m            delete[] elem;[m
[32m+[m[32m            elem = new_elem;[m
[32m+[m[32m        }[m
[32m+[m[41m [m
[32m+[m[32m        void swap(Vector& other) {[m
[32m+[m[32m            T* new_elem = new T[other.sz];[m
[32m+[m[32m            for (auto i=other.size()-1; i>=0; --i) {[m
[32m+[m[32m                new_elem[i] = other[i];[m
[32m+[m[32m                other.pop_back();[m
[32m+[m[32m            }[m
[32m+[m[41m [m
[32m+[m[32m            for (auto i=0; i<sz; ++i) {[m
[32m+[m[32m                other.push_back(elem[i]);[m
[32m+[m[32m            }[m
[32m+[m[41m [m
[32m+[m[32m            delete[] elem;[m
[32m+[m[32m            elem = new_elem;[m
[32m+[m[32m        }[m
[32m+[m[32m};[m
[32m+[m[41m [m
[32m+[m[41m [m
[32m+[m[32mtemplate<class T> void swap(Vector<T>& one, Vector<T>& another) {[m
[32m+[m[32m    one.swap(another);[m
[32m+[m[32m}[m
[32m+[m[41m [m
[32m+[m[32mVector<int> f(Vector<int> v) {[m
[32m+[m[32m    return v;[m
[32m+[m[32m}[m
